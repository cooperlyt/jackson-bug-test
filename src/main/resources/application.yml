server:
  port: 19006

erp:
  internal:
    items:
      serverName: items
    tenant:
      serverName: tenant
  payment:
    enabled: true
    mock: false

spring:
  application:
    name: lease
  addons:
    transaction:
      enabled: true
      mock: true
      tenant: true # single or multi
#      notify:
#        baseUrl: "http://127.0.0.1/${spring.application.name}"
#        provider:
#          wechat:
#            path:
#              payment: "/v1/public/notify/wechat/payment/{type}/{tenant}"
#              refund: "/v1/public/notify/wechat/refund/{type}/{tenant}"
      persistable:
        mode: r2dbc  #memory r2dbc
      provider:
        wechat:
          enabled: true
          notificationBaseUrl: "http://127.0.0.1/"
          certificate:
            auto: true
            updateInterval: 60
#          setting:
          #          mchid: String
          #          apiV3key: ByteArray
          #          privateKey: PrivateKey
          #          merchantSerialNumber: String
          #          transactionExpire: Long
            #tenant:
              # single:
              #          mchid: String
              #          apiV3key: ByteArray
              #          privateKey: PrivateKey
              #          merchantSerialNumber: String
              #          transactionExpire: Long


    jackson:
      long-type:
        enable: true
      zoned-date:
        enable: true
        local-time-zone: Asia/Shanghai
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSXXX
#    longToString: false
  profiles:
    active: local
  cache:  # 可被修改的内容都不能进行本地缓存，因为可能运行多份实例，数据可能会在其它实例中更改，应用内的缓存不能同步到其它实例
    cache-names: items
    type: CAFFEINE
    caffeine:
      spec: maximumSize=500,expireAfterAccess=600s
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: ${KEYCLOAK_ISSUER_URI:${KEYCLOAK_URI}}/realms/${KEYCLOAK_REALM:construction}
#          jwk-set-uri: ${KEYCLOAK_URI}/realms/${KEYCLOAK_REALM:construction}/protocol/openid-connect/certs
#  rabbitmq:
#    publisher-confirm-type: correlated
#    publisher-returns: true
#    host: 10.61.1.22
#    port: 5672
#    username: root
#    password: 1234


  cloud:
#    inetutils:
#      preferred-networks:
#        - 172.16.
#      use-only-site-local-interfaces: false
    loadbalancer:
      cache:
        enabled: true
        caffeine:
          spec: initialCapacity=500,expireAfterWrite=5s
    function:
      definition: stock;tradeCreated;tradeCanceled;tradeStatusChange;tradeCancel;stockRecycled;tradeSettle
    stream:
      default-binder: rabbit
      default:
        content-type: application/json
        producer:
          error-channel-enabled: true
        consumer:
          maxAttempts: 10
        #            backOffInitialInterval:
        #            backOffMultipler:
        #            backOffMaxInterval:
        #            retryableExceptions:
        #              java:
        #                lang:
        #                  IllegalStateException: true
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                publisher-confirm-type: correlated
                publisher-returns: true
                host: 10.61.1.22
                port: 5672
                virtual-host: erp
                username: app
                password: onqbMBU4NVoEJlM2EabSlh3o1PWMrXa7
                # / admin FeiPu@2024 
      bindings:
        tradeCancel-in-0:
          destination: lease
          group: lease.cancel
          content-type: text/plain

        tradeSettle-in-0:
          destination: lease
          group: lease.settle
          content-type: text/plain

        stockRecycled-in-0:
          destination: lease
          group: lease.stock.recycled

        tradeCanceled-out-0:
          destination: lease
#          content-type: application/json
#          producer:
#            error-channel-enabled: true
        tradeCreated-out-0:
          destination: lease
#          content-type: application/json
#          producer:
#            error-channel-enabled: true
        tradeStatusChange-out-0:
          destination: lease
#          content-type: application/json
#          producer:
#            error-channel-enabled: true
        stock-out-0:
          destination: stock
#          content-type: application/json
#          producer:
#            error-channel-enabled: true
      rabbit:
        default:
          producer:
            useConfirmHeader: true
          consumer:
            acknowledge-mode: manual
            auto-bind-dlq: true
            batch-mode: false
            bindQueue: false
            declareExchange: false
            queueNameGroupOnly: true
        bindings:
          tradeCanceled-out-0:
            producer:
#              useConfirmHeader: true
              routingKeyExpression: "headers['erp_tenant'] + '.trade.lease.changed.cancel'"
          tradeCreated-out-0:
            producer:
#              useConfirmHeader: true
              routingKeyExpression: "headers['erp_tenant'] + '.trade.lease.changed.create'"
          tradeStatusChange-out-0:
            producer:
#              useConfirmHeader: true
              routingKeyExpression: "headers['erp_tenant'] + '.trade.lease.changed.status.' + headers['to_status']"
          stock-out-0:
            producer:
#              useConfirmHeader: true
              routingKeyExpression: "headers['erp_tenant'] + '.stock.do.freeze'"
    consul:
      ribbon:
        enabled: false
      config:
        enabled: true
        format: yaml
        prefixes: config
        profile-separator: ':'
        data-key: data
      discovery:
        serviceName: ${spring.application.name}/v1
        # 启用服务发现
        enabled: true
        # 启用服务注册
        register: true
        # 服务停止时取消注册
        deregister: true

        # 表示注册时使用IP而不是hostname
        prefer-ip-address: true
        # 执行监控检查的频率
        health-check-interval: 30s
        # 设置健康检查失败多长时间后，取消注册
        health-check-critical-timeout: 30s
        # 健康检查的路径
        health-check-path: /actuator/info
        # 服务注册标识，格式为：应用名称+服务器IP+端口
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
  r2dbc:
    url: ${DB_URL:r2dbc:mariadb://10.61.1.22:3306/lease?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false}
    username: ${DB_USERNAME:root}
    password: ${DB_PWD:isNull}
  jpa:
    show-sql: "true"
  sql:
    init:
      mode: never

#开启actuator管理api
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always


uid:
  timeBits: 30             # 时间位, 默认:30
  workerBits: 10           # 机器位, 默认:16
  seqBits: 13               # 序列号, 默认:7
  epochStr: "2019-09-01"   # 初始时间, 默认:"2019-02-20"
  enableBackward: true    # 是否容忍时钟回拨, 默认:true
  maxBackwardSeconds: 1    # 时钟回拨最长容忍时间（秒）, 默认:1
  CachedUidGenerator: # CachedUidGenerator相关参数
    boostPower: 3          # RingBuffer size扩容参数, 可提高UID生成的吞吐量, 默认:3
    paddingFactor: 50      # 指定何时向RingBuffer中填充UID, 取值为百分比(0, 100), 默认为50
    #scheduleInterval: 60    # 默认:不配置此项, 即不实用Schedule线程. 如需使用, 请指定Schedule线程时间间隔, 单位:秒

logging:
  level:
    io.github.cooperlyt: TRACE
    org.springframework.cloud.client.discovery: DEBUG
    org.springframework.r2dbc: TRACE
    org.springframework.transaction: DEBUG
    co.elastic.clients: DEBUG
    org.springframework.amqp: DEBUG

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true


---
spring:
  cache: # 可被修改的内容都不能进行本地缓存，因为可能运行多份实例，数据可能会在其它实例中更改，应用内的缓存不能同步到其它实例
    cache-names: items
    type: CAFFEINE
    caffeine:
      spec: maximumSize=500,expireAfterAccess=600s
  config:
    activate:
      on-profile: local
  cloud:
    service-registry:
      auto-registration:
        enabled: false
    discovery:
      enabled: false
    consul:
      #      host: 192.168.1.21
      #      port: 8500
      enabled: false
      config:
        enabled: false
        watch:
          enabled: false
      discovery:
        enabled: false
      ribbon:
        enabled: false
    config:
      enabled: false
  r2dbc:
    url: r2dbc:mysql://10.61.1.22:3306/erp_lease?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: isNull

logging:
  level:
    io.github.cooperlyt: TRACE


erp:
  internal:
    items:
      serverName: items
    tenant:
      serverName: tenant
  payment:
    enabled: true
    mock: true

uid:
  mock:
    enabled: true
---

erp:
  payment:
    enabled: true
    mock: true

server:
  port: 80

spring:
  config:
    activate:
      on-profile: dev
    import: optional:consul:${spring.cloud.consul.host}:${spring.cloud.consul.port}
  cloud:
    loadbalancer:
      cache:
        enabled: false

---

spring:
  cache:
    caffeine:
      spec: maximumSize=500,expireAfterAccess=600s
  config:
    activate:
      on-profile: prod
    import: optional:consul:${spring.cloud.consul.host}:${spring.cloud.consul.port}
  jpa:
    show-sql: false
  r2dbc:
    pool:
      initial-size: 13
      ## 连接池数量 = ((核心数 * 2) + 有效磁盘数)
      max-size: 15


springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

logging:
  level:
    io.github.cooperlyt: INFO
    org.springframework.cloud.client.discovery: INFO
    org.springframework.r2dbc: INFO
    co.elastic.clients: INFO

